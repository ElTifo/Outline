apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: 'ThemerConstants.gradle'
apply from: 'AdvancedTasks.gradle'

android {
    compileSdkVersion 28

    defaultConfig {
        targetSdkVersion 28
        minSdkVersion 25
        versionCode 260000 + 24
        versionName "25"

        buildConfigField "boolean", "SUPPORTS_THIRD_PARTY_SYSTEMS", "" + SUPPORTS_THIRD_PARTY_SYSTEMS
        buildConfigField "boolean", "ENABLE_APP_BLACKLIST_CHECK", "" + ENABLE_APP_BLACKLIST_CHECK
        buildConfigField "boolean", "ENFORCE_GOOGLE_PLAY_INSTALL", "" + ENFORCE_GOOGLE_PLAY_INSTALL
        buildConfigField "boolean", "ALLOW_THIRD_PARTY_SUBSTRATUM_BUILDS", "" + ALLOW_THIRD_PARTY_SUBSTRATUM_BUILDS
        buildConfigField "String", "IV_KEY", "\"" + IV_KEY + "\""
        buildConfigField "byte[]", "DECRYPTION_KEY", String.valueOf("\"" + KEY + "\"").replace("\"", "").replace("[", "{").replace("]", "}")
        buildConfigField "byte[]", "IV_KEY", String.valueOf("\"" + IV_KEY + "\"").replace("\"", "").replace("[", "{").replace("]", "}")
        resValue "string", "encryption_status", (shouldEncrypt() ? "onCompileVerify" : "false")
    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            versionNameSuffix ' - '+  new Date().format('dd.MM HH:mm')
            applicationIdSuffix ".debug"

            buildConfigField "boolean", "ENFORCE_GOOGLE_PLAY_INSTALL", "false"
            buildConfigField "String", "BASE_64_LICENSE_KEY", "\"\""
            buildConfigField "String", "APK_SIGNATURE_PRODUCTION", "\"\""
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        flavorDimensions "theme"
        productFlavors {
            dark {
                dimension "theme"
                applicationId "com.schnettler.ethereal"

                buildConfigField "String", "BASE_64_LICENSE_KEY", "\"" + ETHEREAL_BASE_64_LICENSE_KEY + "\""
                buildConfigField "String", "APK_SIGNATURE_PRODUCTION", "\"" + ETHEREAL_APK_SIGNATURE_PRODUCTION + "\""
            }
            light {
                dimension "theme"
                applicationId "com.schnettler.outline"

                buildConfigField "String", "BASE_64_LICENSE_KEY", "\"" + OUTLINE_BASE_64_LICENSE_KEY + "\""
                buildConfigField "String", "APK_SIGNATURE_PRODUCTION", "\"" + OUTLINE_APK_SIGNATURE_PRODUCTION + "\""
            }
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    signingConfigs {
        debug {
            storeFile file("debug.keystore")
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.github.javiersantos:PiracyChecker:1.2.4'
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version") {
        transitive = true
    }
}

project.afterEvaluate {
    preBuild.dependsOn prepareManifest
}

boolean shouldEncrypt() {
    ArrayList<String> tasks = project.gradle.startParameter.taskNames
    return SHOULD_ENCRYPT_ASSETS && Arrays.toString(tasks).toLowerCase().contains("release")
}

repositories {
    mavenCentral()
}