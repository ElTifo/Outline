import java.nio.IntBuffer

apply plugin: 'com.android.application'

/*
 * Gets Number of total Commits
 */
def getHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-list', '--count', 'lightdark'
        standardOutput = stdout
    }
    return (Integer.parseInt(stdout.toString().trim())-783)
}

android {
    signingConfigs {
    }
    compileSdkVersion 25
    buildToolsVersion "25"
    defaultConfig {
        targetSdkVersion 25
        minSdkVersion 25
        versionCode 57
    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            versionNameSuffix ' - '+ getHash()+ ' (' + getTimeOnly() + ')'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        productFlavors {
            dark{
                applicationId "com.schnettler.outline.dark"
                versionName "Alpha"
            }
            light{
                applicationId "com.schnettler.outline"
                versionName "8.8.1"
            }
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            if (variant.flavorName == "dark"){
                output.outputFile = new File(
                        output.outputFile.parent, "Ethereal_Alpha-" + getHash()+ "-"+variant.buildType.name+".apk")
            }
            if (variant.flavorName == "light"){
                output.outputFile = new File(
                        output.outputFile.parent, "Outline_" + getHash()+ "-"+variant.buildType.name+".apk")
            }

        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.github.javiersantos:PiracyChecker:1.0.2'
    compile project(':substrate')
}

def getDate() {
    def date = new Date()
    def formattedDate = date.format('dd.MM HH:mm')
    return formattedDate
}

def getTimeOnly() {
    def date = new Date()
    def formattedDate = date.format('HH:mm')
    return formattedDate
}
